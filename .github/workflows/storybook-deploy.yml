name: Deploy Storybook to GitHub Pages

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      skip_tests:
        description: 'Skip running tests before deployment'
        required: false
        default: false
        type: boolean

  # Trigger on push to main branch (optional)
  push:
    branches:
      - main
    paths:
      - 'design-system/**'
      - 'components/**'
      - '.storybook/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tailwind.config.js'
      - 'vite.config.ts'

  # Trigger on pull request to main (optional)
  pull_request:
    branches:
      - main
    paths:
      - 'design-system/**'
      - 'components/**'
      - '.storybook/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tailwind.config.js'
      - 'vite.config.ts'

# Set permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and test job
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint --if-present

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests (if not skipped)
        if: ${{ !inputs.skip_tests }}
        run: |
          npm run test:button:all --if-present
          npm run test:coverage --if-present

      - name: Build Storybook
        run: npm run build-storybook

      - name: Upload Storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: storybook-static/
          retention-days: 1

  # Deploy job
  deploy:
    environment:
      name: ${{ inputs.environment || 'production' }}
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Download Storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: storybook-static/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notification job (optional)
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Storybook deployed successfully!"
            echo "üåê URL: ${{ needs.deploy.outputs.page_url }}"
          else
            echo "‚ùå Storybook deployment failed!"
            exit 1
          fi
